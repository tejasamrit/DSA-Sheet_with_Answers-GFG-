Given an array arr[] with non-negative integers representing the height of blocks.
If the width of each block is 1, compute how much water can be trapped between the blocks during the rainy season. 

Examples:
Input: arr[] = [3, 0, 0, 2, 0, 4]
Output: 10

Input: arr[] = [7, 4, 0, 9]
Output: 10
Explanation:
Water trapped by above 
block of height 4 is 3 units and above 
block of height 0 is 7 units. So, the 
total unit of water trapped is 10 units.


class Solution {
    public int trappingWater(int arr[]) {
        int n=arr.length;
        int i=1;
        int j=n-2;
        
        int left=arr[0];
        int right=arr[n-1];
        
        int ans=0;
        
        while(i<=j){
            if(right>=left){
                ans += Math.max(0, left-arr[i]);
                left=Math.max(left,arr[i]);
                i++;
            }
            else{
                ans += Math.max(0, right-arr[j]);
                right= Math.max(right, arr[j]);
                j--;
            }
        }
        return ans;
        
    }
}
