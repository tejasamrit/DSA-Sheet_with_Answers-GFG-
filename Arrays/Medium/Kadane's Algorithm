https://www.geeksforgeeks.org/problems/kadanes-algorithm-1587115620/1?page=1&category=Arrays&difficulty=Medium&sortBy=submissions
Given an integer array arr[]. 
You need to find and return the maximum sum possible from all the subarrays.

Examples:
Input: arr[] = [2, 3, -8, 7, -1, 2, 3]
Output: 11
Explanation: The subarray {7, -1, 2, 3} has the largest sum 11.

Input: arr[] = [-2, -4]
Output: -2
Explanation: The subarray {-2} has the largest sum -2.


Solution:
class Solution {
    // Function to find the sum of contiguous subarray with maximum sum.
    int maxSubarraySum(int[] arr) {

        int sum = 0;
        int max = Integer.MIN_VALUE;
        
        for(int i = 0 ; i < arr.length;i++){
            sum += arr[i];
            
            if(sum > max){
                max =sum;
            }
            if(sum < 0){
                sum = 0;
            }
        }
        return max;
    }
}
