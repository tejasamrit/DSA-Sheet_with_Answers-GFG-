https://www.geeksforgeeks.org/problems/majority-element-1587115620/1?page=1&category=Arrays&difficulty=Medium&sortBy=submissions
Given an array arr. Find the majority element in the array. If no majority exists, return -1.
A majority element in an array is an element that appears strictly more than arr.size()/2 times in the array.

Examples:
Input: arr[] = [3, 1, 3, 3, 2]
Output: 3
Explanation: Since, 3 is present more than n/2 times, so it is the majority element.

Input: arr[] = [7]
Output: 7
Explanation: Since, 7 is single element and present more than n/2 times, so it is the majority element.


Solution:
class Solution {
    static int majorityElement(int arr[]) {
        Map<Integer,Integer>mp=new HashMap<>();
        for(int i:arr)
        {
            mp.put(i,mp.getOrDefault(i,0)+1);
            if(mp.get(i)>(arr.length)/2)
            {
                return i;
            }
        }
        return -1;
    }
}
