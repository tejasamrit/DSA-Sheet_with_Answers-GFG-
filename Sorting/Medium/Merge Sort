Given an array arr[], its starting position l and its ending position r. 
Sort the array using the merge sort algorithm.

Examples:
Input: arr[] = [4, 1, 3, 9, 7]
Output: [1, 3, 4, 7, 9]

Input: arr[] = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
Output: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]


class Solution {
    void mergeSort(int arr[], int l, int r) {
        if(l<r){
            int m=(l+r)/2;
            mergeSort(arr,l,m);
            mergeSort(arr,m+1,r);
            merge(arr,l,m,r);
        }
    }
    void merge(int arr[],int l,int m,int r){
        int n1=m-l+1; int n2=r-m;
        int left[]=new int[n1];
        int right[]=new int [n2];
        for(int i=0;i<n1;i++){
            left[i]=arr[i+l];
        }
        for(int j=0;j<n2;j++){
            right[j]=arr[m+1+j];
        }
        int i=0,j=0,k=l;
        while(i<n1 && j<n2){
            if(left[i]<right[j]){
                arr[k++]=left[i++];
            }
            else{
                arr[k++]=right[j++];
            }
        }
        while(i<n1){
            arr[k++]=left[i++];
        }
        while(j<n2){
            arr[k++]=right[j++];
        }
    }
}
