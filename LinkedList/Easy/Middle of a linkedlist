Given the head of a linked list, the task is to find the middle. 
For example, the middle of 1-> 2->3->4->5 is 3. If there are two middle nodes (even count), return the second middle. 
For example, middle of 1->2->3->4->5->6 is 4.

Examples:
Input: Linked list: 1->2->3->4->5
Output: 3
Explanation: The given linked list is 1->2->3->4->5 and its middle is 3.

Input: Linked list: 2->4->6->7->5->1
Output: 7 
Explanation: The given linked list is 2->4->6->7->5->1 and its middle is 7.


class Solution
{
    int getMiddle(Node head)
    {
        Node s=head;
        Node f=head;
        while(f!=null && f.next!=null){
            s=s.next;
            f=f.next.next;
        }
        return s.data;
    }
